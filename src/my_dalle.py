from langchain.llms import OpenAI
import os
import sys
# from langchain.utilities.dalle_image_generator import DallEAPIWrapper
from langchain.prompts import PromptTemplate
from langchain.chains import LLMChain
from langchain.llms import OpenAI
sys.path.append(r'C:\Users\silvh\OneDrive\lighthouse\portfolio-projects\langchain\libs\core')
from dalle_image_generator import DallEAPIWrapper

def get_dalle_image(text, n=3, temperature=1, template=None, verbose=False, max_retries=1, max_tokens=900):
    llm = OpenAI(
        temperature=temperature, openai_organization=os.environ['openai_organization'],
        max_retries=max_retries, max_tokens=max_tokens
        )
    text = text.strip()
    if template:
        template=template + ': {text}'
    else:
        template="Generate a detailed prompt to generate an image based on the following social media post: {text}"
    prompt = PromptTemplate(
        input_variables=["text"],
        template=template,
    )
    print(f'Prompt template: {prompt.template}')
    print(f'\nInput: {text}')
    chain = LLMChain(llm=llm, prompt=prompt, verbose=verbose)
    image_prompt = chain.run(text).strip()
    print(f'\nImage prompt: {image_prompt}')
    try:
        image_url = DallEAPIWrapper(n=n).run(image_prompt)
    except Exception as error:
        exc_type, exc_obj, tb = sys.exc_info()
        f = tb.tb_frame
        lineno = tb.tb_lineno
        filename = f.f_code.co_filename
        print("An error occurred on line", lineno, "in", filename, ":", error)
        image_url = None

    results = {
        'image_url': image_url, 
        'description': text,
        'prompt': prompt,
        'image_prompt': image_prompt
        }
    return results

def create_linkedin_post(results_dict, iteration, model='Dall-E 3', hashtags=['datascience', 'llm']):
    print(results_dict[iteration]['description'])
    print(f'\n\nPS: The image was generated by {model} (which obviously is not perfect yet). I asked OpenAI to generate the DALL-E prompt based on the text of the above post, and this was the result: "{results_dict[iteration]["image_prompt"].strip()}".')
    print(f'\nPPS: If you really want to know, the prompt template I used to generate the DALL-E prompt (with the help of the LangChain `LLMChain` class) was as follows: "{results_dict[iteration]["prompt"].template[:-8].strip()}"')
    print(f'\n\n{"".join([f"#{tag} " for tag in hashtags])}')
